<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rock.ssm.dao.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.rock.ssm.entities.Userinfo">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="levelid" jdbcType="INTEGER" property="levelid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userid, username, sex, email, levelid
  </sql>
	<!--
		 List<Userinfo> selectByExampleWithUserlevel(UserinfoExample example);
   		 Userinfo selectByPrimaryKeyWithUserlevel(Integer userid);
    -->
    <resultMap id="BaseResultMapWithUserlevel" type="com.rock.ssm.entities.Userinfo">
	    <id column="userid" jdbcType="INTEGER" property="userid" />
	    <result column="username" jdbcType="VARCHAR" property="username" />
	    <result column="sex" jdbcType="VARCHAR" property="sex" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="levelid" jdbcType="INTEGER" property="levelid" />
	    <association property="userlevel" javaType="com.rock.ssm.entities.Userlevel">
	    	<id column="levelid" property="levelid"/>
	    	<result column="levelname" property="levelname"/>
	    	<result column="leveltxt" property="leveltxt"/>
	    </association>
  	</resultMap>
  <!-- 	
  	SELECT u.userid,u.username,u.sex,u.email,u.levelid,l.levelname,l.leveltxt 
	FROM userinfo u LEFT JOIN userlevel l ON u.levelid=l.levelid 
  -->
    <sql id="Base_Column_List_WithUserlevel">
    	u.userid,u.username,u.sex,u.email,u.levelid,l.levelname,l.leveltxt 
 	</sql>
    <select id="selectByExampleWithUserlevel" parameterType="com.rock.ssm.entities.UserinfoExample" resultMap="BaseResultMap">
	    select
	    <if test="distinct">
	      distinct
	    </if>
	    <include refid="Base_Column_List_WithUserlevel" />
	    FROM userinfo u LEFT JOIN userlevel l ON u.levelid=l.levelid
	    <if test="_parameter != null">
	      <include refid="Example_Where_Clause" />
	    </if>
	    <if test="orderByClause != null">
	      order by ${orderByClause}
	    </if>
  	</select>
    <select id="selectByPrimaryKeyWithUserlevel" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List_WithUserlevel" />
	   FROM userinfo u LEFT JOIN userlevel l ON u.levelid=l.levelid
	    where userid = #{userid,jdbcType=INTEGER}
  	</select>
    
  
  <select id="selectByExample" parameterType="com.rock.ssm.entities.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rock.ssm.entities.UserinfoExample">
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rock.ssm.entities.Userinfo">
    insert into userinfo (userid, username, sex, 
      email, levelid)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{levelid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rock.ssm.entities.Userinfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="levelid != null">
        levelid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="levelid != null">
        #{levelid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rock.ssm.entities.UserinfoExample" resultType="java.lang.Long">
    select count(*) from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userinfo
    <set>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.levelid != null">
        levelid = #{record.levelid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userinfo
    set userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      levelid = #{record.levelid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rock.ssm.entities.Userinfo">
    update userinfo
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="levelid != null">
        levelid = #{levelid,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rock.ssm.entities.Userinfo">
    update userinfo
    set username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      levelid = #{levelid,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>
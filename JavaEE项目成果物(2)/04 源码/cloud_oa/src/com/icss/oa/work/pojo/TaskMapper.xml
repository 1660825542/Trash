<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TASK">
  <resultMap id="BaseResultMap" type="com.icss.oa.work.pojo.Task">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 19:02:36 CST 2015.
    -->
    <id column="TASK_ID" jdbcType="DECIMAL" property="taskId" />
    <result column="TASK_NAME" jdbcType="VARCHAR" property="taskName" />
    <result column="TASK_CONTENT" jdbcType="VARCHAR" property="taskContent" />
    <result column="TASK_DATE" jdbcType="TIMESTAMP" property="taskDate" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="START_TIME" jdbcType="TIMESTAMP" property="startTime" />
    <result column="FINISH_TIME" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  
	 <insert id="insert" parameterType="Task">
	    insert into TASK (TASK_ID, TASK_NAME, TASK_CONTENT, 
	      TASK_DATE, STATE, START_TIME, 
	      FINISH_TIME)
	    values (task_seq.nextval, #{taskName,jdbcType=VARCHAR}, #{taskContent,jdbcType=VARCHAR}, 
	      #{taskDate,jdbcType=TIMESTAMP}, #{state,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, 
	      #{finishTime,jdbcType=TIMESTAMP})
	 </insert>
	 
	
	 <update id="update" parameterType="Task">
	    update TASK
	    set TASK_NAME = #{taskName,jdbcType=VARCHAR},
	      TASK_CONTENT = #{taskContent,jdbcType=VARCHAR},
	      TASK_DATE = #{taskDate,jdbcType=TIMESTAMP},
	      STATE = #{state,jdbcType=DECIMAL},
	      START_TIME = #{startTime,jdbcType=TIMESTAMP},
	      FINISH_TIME = #{finishTime,jdbcType=TIMESTAMP}
	      where TASK_ID = #{taskId,jdbcType=DECIMAL}
	 </update>
	
	 
	 <delete id="delete" parameterType="java.lang.Integer">
	     delete from TASK
	    where TASK_ID = #{taskId,jdbcType=DECIMAL}
	 </delete>
	 
	 <select id="query" resultType="java.util.Map" parameterType="java.util.Map">
			select * from (select rownum rnum,
			t.*,e.emp_name emp,m.emp_name manager,e.emp_id emp_id,m.emp_id manager_id
			from task t
			inner join task_list tl on t.task_id=tl.task_id
			left outer join employee e on e.emp_id=tl.emp_id
			left outer join employee m on m.emp_id=tl.manager_id)
			where rnum between #{start} and #{end}
	 </select>
 
	 <select id="queryById" resultType="java.util.Map" parameterType="java.lang.Integer">
		select task.*,tl.emp_id,tl.manager_id,e.emp_name emp,m.emp_name manager
			from task 
			inner join task_list tl on task.task_id=tl.task_id
			left outer join employee e on e.emp_id=tl.emp_id
			left outer join employee m on m.emp_id=tl.manager_id
			where task.task_id = #{taskId}
	 </select>
	 
	<select id="queryByCondition" resultType="java.util.Map" parameterType="java.util.Map">
		select * from(select rownum rnum ,t.* from (select 
		task.*,tl.emp_id,tl.manager_id,e.emp_name emp,m.emp_name manager
		from task 
		inner join task_list tl on task.task_id=tl.task_id
		left outer join employee e on e.emp_id=tl.emp_id
		left outer join employee m on m.emp_id=tl.manager_id) t
		<where> 
			<if test="condition == 'manager'">    
				and #{data,jdbcType=DECIMAL} = t.manager_id
			</if>
			
			<if test="condition == 'emp'">    
				and #{data,jdbcType=DECIMAL} = t.emp_id
			</if>
		</where>
		) m where rnum between #{start} and #{end} order by m.state asc
    </select>
    
	<select id="multipleQuery" resultType="java.util.Map" parameterType="java.util.Map">
		select * from(select * from (select rownum rnum,
		task.*,e.emp_name emp,m.emp_name manager,e.emp_id emp_id,m.emp_id manager_id
		from task 
		inner join task_list tl on task.task_id=tl.task_id
		left outer join employee e on e.emp_id=tl.emp_id
		left outer join employee m on m.emp_id=tl.manager_id) t
		<where> 
			<if test="date != null">    
				and #{date} = t.task_date
			</if>
			
			<if test="empName != null and empName != ''">    
				and t.emp = #{empName}
			</if>
			
			<if test="managerName != null and managerName != ''">    
				and t.manager = #{managerName}
			</if>
		</where>
		)where rnum between #{start} and #{end}
    </select>

	
	<select id="getCount" resultType="java.lang.Integer">
		select
		count(*)
		from task
	</select>
	
	<select id="getConditionCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from task_list 
		<where> 
			<if test="condition == 'manager'">    
				and #{data} = task_list.manager_id
			</if>
			
			<if test="condition == 'emp'">    
				and #{data} = task_list.emp_id
			</if>
		</where>
	</select>
	
	<select id="getMultipleCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(*) from (select task.*,e.emp_name emp,m.emp_name manager from task 
		inner join task_list tl on task.task_id=tl.task_id
		inner join employee e on e.emp_id=tl.emp_id
		inner join employee m on m.emp_id=tl.manager_id) t
		<where> 
			<if test="date != null">    
				and #{date} = t.task_date
			</if>
			
			<if test="empName != null and empName != ''">    
				and t.emp = #{empName}
			</if>
			
			<if test="managerName != null and managerName != ''">    
				and t.manager = #{managerName}
			</if>
		</where>
	</select>
	
	<select id="getPrimaryKey" resultType="java.lang.Integer">
	    select task_seq.currval from dual
	</select>
	
	<select id="queryForapp" resultType="java.util.Map"
		parameterType="java.util.Map">
		select *
		from (select t.*, rownum rnum
		from (select task.*, e.emp_id, m.emp_name manager
		from task
		inner join task_list tl
		on task.task_id = tl.task_id
		left outer join employee e
		on e.emp_id = tl.emp_id
		inner join employee m
		on m.emp_id = tl.manager_id
		<where>
			<if test="empId != null and empId != ''">
				and e.emp_id = #{empId} 
			</if>
		</where>
		order by start_time desc) t)
		where rnum between #{start} and #{end}

	</select>

	<select id="queryEmpTaskCount" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select count(*) from TASK_LIST t where
		t.emp_id =
		#{empId}
	</select>

	<update id="finishTask" parameterType="java.lang.Integer">
		update task set state=1
		where task_id= #{taskId}
	</update>
</mapper>
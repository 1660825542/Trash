<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CAR" >
  <resultMap id="BaseResultMap" type="com.icss.oa.car.pojo.Car" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 22 15:30:34 CST 2015.
    -->
    <id column="CAR_ID" property="carId" jdbcType="DECIMAL" />
    <result column="CAR_TYPE" property="carType" jdbcType="VARCHAR" />
    <result column="LICENSE" property="license" jdbcType="VARCHAR" />
    <result column="PICTURE" property="picture" jdbcType="BLOB" />
  </resultMap>

  <delete id="delete" parameterType="java.lang.Integer" >
    delete from CAR
    where CAR_ID = #{carId,jdbcType=DECIMAL}
  </delete>

  <update id="update" parameterType="Car" >
    update CAR
    set CAR_TYPE = #{carType,jdbcType=VARCHAR},
      LICENSE = #{license,jdbcType=VARCHAR}
      <if test="picture != null and picture != ''">
     	 ,PICTURE = #{picture,jdbcType=BLOB}
      </if>
    where CAR_ID = #{carId,jdbcType=DECIMAL}
  </update>
  
  <insert id="insert" parameterType="Car" >
   insert into CAR (CAR_ID, CAR_TYPE, LICENSE, PICTURE)
   values (
   car_seq.nextval,
   #{carType,jdbcType=VARCHAR}, 
   #{license,jdbcType=VARCHAR}, 
   #{picture,jdbcType=BLOB}
   )
  </insert>
  
  <select id="queryById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	select * from CAR where CAR_ID=#{carId,jdbcType=DECIMAL}
  </select>
  
  <select id="getCount" resultType="java.lang.Integer">
	select count(*) from CAR
  </select>
  
  <!-- 分页查询并生序排列 -->
  <select id="queryByPager" parameterType="java.util.Map"
	resultMap="BaseResultMap">   
	select * from (select rownum rnum,s.* from (select * from CAR order by CAR_ID desc) s)
	where
	rnum between #{start} and #{end}
  </select>
  
  	  	<!-- 按时间分页查询并升序排列 -->
	<select id="queryByTime" parameterType="java.util.Map"
		resultMap="BaseResultMap">		
				select * from car 
					where Car_id not in 
					( 
					select CAR.CAR_ID from CAR , CAR_RECORD 
						where CAR.CAR_ID = CAR_RECORD.CAR_ID
						and 			
						(<![CDATA[
						(#{startTime,jdbcType=TIMESTAMP} > END_TIME 
						]]>
						or 
						<![CDATA[
						#{endTime,jdbcType=TIMESTAMP} < START_TIME)
						]]>)
					)
	</select>
  
  
</mapper>